// **********************************************************************
//
// Generated by the ORBacus IDL-to-C++ Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 3.3.4

#include <OB/CORBA.h>
#include <DirectorLink_skel.h>

#ifndef OB_INTEGER_VERSION
#   error No ORBacus version defined! Is <OB/CORBA.h> included?
#endif

#ifndef OB_NO_VERSION_CHECK
#   if (OB_INTEGER_VERSION != 3030400L)
#       error ORBacus version mismatch!
#   endif
#endif

//
// IDL:DirectorLink/callY50:1.0
//
OBDispatchStatus
DirectorLink_skel::_OB_op_callY50(OBBuffer& _ob_buf,
                                  bool _ob_sw,
                                  CORBA_ULong _ob_offIn,
                                  CORBA_ULong _ob_offOut)
{
    const CORBA_Octet* _ob_co = _ob_buf.data + _ob_offIn;
    CORBA_String_var _ob_a0;
    OBUnmarshal(_ob_a0.inout(), _ob_co, _ob_sw);

    CORBA_String_var _ob_r = callY50(_ob_a0.in());

    CORBA_ULong _ob_cnt = _ob_offOut;
    OBMarshalCount(_ob_r.in(), _ob_cnt);

    _ob_buf.alloc(_ob_cnt);
    CORBA_Octet* _ob_o = _ob_buf.data + _ob_offOut;
    OBMarshal(_ob_r.in(), _ob_o);

    return OBDispatchStatusOK;
}

//
// IDL:DirectorLink:1.0
//
OBDispatchStatus
DirectorLink_skel::_OB_dispatch(const char* _ob_op,
                                OBBuffer& _ob_buf,
                                bool _ob_sw,
                                CORBA_ULong _ob_offIn,
                                CORBA_ULong _ob_offOut)
{
    static const char* _ob_names[] =
    {
        "callY50"
    };
    static const CORBA_ULong _ob_numNames = 1;

    switch(_OB_findOperation(_ob_op, _ob_names, _ob_numNames))
    {
    case 0: // callY50
        return _OB_op_callY50(_ob_buf, _ob_sw, _ob_offIn, _ob_offOut);
    }

    return CORBA_Object_skel::_OB_dispatch(_ob_op, _ob_buf, _ob_sw, _ob_offIn, _ob_offOut);
}
